; ModuleID = '/Users/fak/Dropbox/Projects/circuitpython/py/modmicropython.c'
source_filename = "/Users/fak/Dropbox/Projects/circuitpython/py/modmicropython.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

%struct._mp_obj_type_t = type { %struct._mp_obj_base_t, i16, i16, void (%struct._mp_print_t*, i8*, i32)*, i8* (%struct._mp_obj_type_t*, i64, i8**, %struct._mp_map_t*)*, i8* (i8*, i64, i64, i8**)*, i8* (i32, i8*)*, i8* (i32, i8*, i8*)*, void (i8*, i64, i8**)*, i8* (i8*, i8*, i8*)*, i8* (i8*, %struct._mp_obj_iter_buf_t*)*, i8* (i8*)*, %struct._mp_buffer_p_t, i8*, i8*, %struct._mp_obj_dict_t* }
%struct._mp_obj_base_t = type { %struct._mp_obj_type_t* }
%struct._mp_print_t = type { i8*, void (i8*, i8*, i64)* }
%struct._mp_map_t = type { i64, i64, %struct._mp_map_elem_t* }
%struct._mp_map_elem_t = type { i8*, i8* }
%struct._mp_obj_iter_buf_t = type { %struct._mp_obj_base_t, [3 x i8*] }
%struct._mp_buffer_p_t = type { i64 (i8*, %struct._mp_buffer_info_t*, i64)* }
%struct._mp_buffer_info_t = type { i8*, i64, i32 }
%struct._mp_obj_dict_t = type { %struct._mp_obj_base_t, %struct._mp_map_t }
%struct._mp_obj_module_t = type { %struct._mp_obj_base_t, %struct._mp_obj_dict_t* }
%struct._mp_rom_map_elem_t = type { i8*, i8* }
%struct._mp_obj_fun_builtin_fixed_t = type { %struct._mp_obj_base_t, %union.anon }
%union.anon = type { i8* ()* }
%union.anon.0 = type { i8* (i64, i8**)* }
%struct._mp_state_ctx_t = type { %struct._mp_state_thread_t, %struct._mp_state_vm_t, %struct._mp_state_mem_t }
%struct._mp_state_thread_t = type { i8*, %struct._mp_obj_dict_t*, %struct._mp_obj_dict_t*, %struct._nlr_buf_t* }
%struct._nlr_buf_t = type { %struct._nlr_buf_t*, i8*, [37 x i32] }
%struct._mp_state_vm_t = type { %struct._qstr_pool_t*, %struct._mp_obj_exception_t, %struct._mp_obj_exception_t, %struct._mp_obj_dict_t, i8*, %struct._mp_obj_dict_t, %struct._mp_obj_list_t, %struct._mp_obj_list_t, [8 x i8*], i8*, i64, i64, i64 }
%struct._qstr_pool_t = type { %struct._qstr_pool_t*, i64, i64, i64, [0 x i8*] }
%struct._mp_obj_exception_t = type { %struct._mp_obj_base_t, i64, i64*, %struct._mp_obj_tuple_t* }
%struct._mp_obj_tuple_t = type { %struct._mp_obj_base_t, i64, [0 x i8*] }
%struct._mp_obj_list_t = type { %struct._mp_obj_base_t, i64, i64, i8** }
%struct._mp_state_mem_t = type { i8*, i64, i8*, i8*, i8*, i32, [64 x i64], i16, i8, i64, i64, i8** }
%struct._mp_obj_none_t = type opaque

@mp_type_module = external constant %struct._mp_obj_type_t, align 8
@mp_module_micropython = local_unnamed_addr constant %struct._mp_obj_module_t { %struct._mp_obj_base_t { %struct._mp_obj_type_t* @mp_type_module }, %struct._mp_obj_dict_t* bitcast ({ %struct._mp_obj_base_t, { i8, i8, i8, i8, i8, i8, i8, i8, i64, %struct._mp_map_elem_t* } }* @mp_module_micropython_globals to %struct._mp_obj_dict_t*) }, align 8, !dbg !0
@mp_type_dict = external constant %struct._mp_obj_type_t, align 8
@mp_module_micropython_globals_table = internal constant [5 x %struct._mp_rom_map_elem_t] [%struct._mp_rom_map_elem_t { i8* inttoptr (i64 114 to i8*), i8* inttoptr (i64 722 to i8*) }, %struct._mp_rom_map_elem_t { i8* inttoptr (i64 506 to i8*), i8* bitcast (%struct._mp_obj_fun_builtin_fixed_t* @mp_identity_obj to i8*) }, %struct._mp_rom_map_elem_t { i8* inttoptr (i64 746 to i8*), i8* bitcast ({ %struct._mp_obj_base_t, i8, i8, i8, i8, %union.anon.0 }* @mp_micropython_opt_level_obj to i8*) }, %struct._mp_rom_map_elem_t { i8* inttoptr (i64 614 to i8*), i8* bitcast (%struct._mp_obj_fun_builtin_fixed_t* @mp_micropython_heap_lock_obj to i8*) }, %struct._mp_rom_map_elem_t { i8* inttoptr (i64 618 to i8*), i8* bitcast (%struct._mp_obj_fun_builtin_fixed_t* @mp_micropython_heap_unlock_obj to i8*) }], align 16, !dbg !226
@mp_module_micropython_globals = internal constant { %struct._mp_obj_base_t, { i8, i8, i8, i8, i8, i8, i8, i8, i64, %struct._mp_map_elem_t* } } { %struct._mp_obj_base_t { %struct._mp_obj_type_t* @mp_type_dict }, { i8, i8, i8, i8, i8, i8, i8, i8, i64, %struct._mp_map_elem_t* } { i8 87, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 5, %struct._mp_map_elem_t* bitcast ([5 x %struct._mp_rom_map_elem_t]* @mp_module_micropython_globals_table to %struct._mp_map_elem_t*) } }, align 8, !dbg !78
@mp_identity_obj = external constant %struct._mp_obj_fun_builtin_fixed_t, align 8
@mp_micropython_heap_lock_obj = internal constant %struct._mp_obj_fun_builtin_fixed_t { %struct._mp_obj_base_t { %struct._mp_obj_type_t* @mp_type_fun_builtin_0 }, %union.anon { i8* ()* @mp_micropython_heap_lock } }, align 8, !dbg !263
@mp_micropython_heap_unlock_obj = internal constant %struct._mp_obj_fun_builtin_fixed_t { %struct._mp_obj_base_t { %struct._mp_obj_type_t* @mp_type_fun_builtin_0 }, %union.anon { i8* ()* @mp_micropython_heap_unlock } }, align 8, !dbg !286
@mp_type_fun_builtin_var = external constant %struct._mp_obj_type_t, align 8
@mp_micropython_opt_level_obj = internal constant { %struct._mp_obj_base_t, i8, i8, i8, i8, %union.anon.0 } { %struct._mp_obj_base_t { %struct._mp_obj_type_t* @mp_type_fun_builtin_var }, i8 0, i8 0, i8 1, i8 0, %union.anon.0 { i8* (i64, i8**)* @mp_micropython_opt_level } }, align 8, !dbg !239
@mp_state_ctx = external local_unnamed_addr global %struct._mp_state_ctx_t, align 8
@mp_const_none_obj = external constant %struct._mp_obj_none_t, align 1
@mp_type_fun_builtin_0 = external constant %struct._mp_obj_type_t, align 8

; Function Attrs: nounwind ssp uwtable
define internal i8* @mp_micropython_opt_level(i64, i8** nocapture readonly) #0 !dbg !301 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !303, metadata !DIExpression()), !dbg !305
  call void @llvm.dbg.value(metadata i8** %1, metadata !304, metadata !DIExpression()), !dbg !306
  %3 = icmp eq i64 %0, 0, !dbg !307
  br i1 %3, label %4, label %9, !dbg !309

; <label>:4:                                      ; preds = %2
  %5 = load i64, i64* getelementptr inbounds (%struct._mp_state_ctx_t, %struct._mp_state_ctx_t* @mp_state_ctx, i64 0, i32 1, i32 12), align 8, !dbg !310, !tbaa !312
  %6 = shl i64 %5, 1, !dbg !310
  %7 = or i64 %6, 1, !dbg !310
  %8 = inttoptr i64 %7 to i8*, !dbg !310
  br label %12, !dbg !329

; <label>:9:                                      ; preds = %2
  %10 = load i8*, i8** %1, align 8, !dbg !330, !tbaa !332
  %11 = tail call i64 @mp_obj_get_int(i8* %10) #3, !dbg !333
  store i64 %11, i64* getelementptr inbounds (%struct._mp_state_ctx_t, %struct._mp_state_ctx_t* @mp_state_ctx, i64 0, i32 1, i32 12), align 8, !dbg !334, !tbaa !312
  br label %12, !dbg !335

; <label>:12:                                     ; preds = %9, %4
  %13 = phi i8* [ %8, %4 ], [ bitcast (%struct._mp_obj_none_t* @mp_const_none_obj to i8*), %9 ], !dbg !336
  ret i8* %13, !dbg !337
}

declare i64 @mp_obj_get_int(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i8* @mp_micropython_heap_lock() #0 !dbg !338 {
  tail call void @gc_lock() #3, !dbg !340
  ret i8* bitcast (%struct._mp_obj_none_t* @mp_const_none_obj to i8*), !dbg !341
}

declare void @gc_lock() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i8* @mp_micropython_heap_unlock() #0 !dbg !342 {
  tail call void @gc_unlock() #3, !dbg !343
  ret i8* bitcast (%struct._mp_obj_none_t* @mp_const_none_obj to i8*), !dbg !344
}

declare void @gc_unlock() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.module.flags = !{!295, !296, !297, !298, !299}
!llvm.dbg.cu = !{!2}
!llvm.ident = !{!300}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mp_module_micropython", scope: !2, file: !3, line: 200, type: !288, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Apple LLVM version 10.0.1 (clang-1001.0.46.4)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !69, globals: !77)
!3 = !DIFile(filename: "/Users/fak/Dropbox/Projects/circuitpython/py/modmicropython.c", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!4 = !{!5, !14, !28}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 423, size: 32, elements: !7)
!6 = !DIFile(filename: "../../py/obj.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!7 = !{!8, !9, !10, !11, !12, !13}
!8 = !DIEnumerator(name: "PRINT_STR", value: 0)
!9 = !DIEnumerator(name: "PRINT_REPR", value: 1)
!10 = !DIEnumerator(name: "PRINT_EXC", value: 2)
!11 = !DIEnumerator(name: "PRINT_JSON", value: 3)
!12 = !DIEnumerator(name: "PRINT_RAW", value: 4)
!13 = !DIEnumerator(name: "PRINT_EXC_SUBCLASS", value: 128)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 47, size: 32, elements: !16)
!15 = !DIFile(filename: "../../py/runtime0.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27}
!17 = !DIEnumerator(name: "MP_UNARY_OP_POSITIVE", value: 0)
!18 = !DIEnumerator(name: "MP_UNARY_OP_NEGATIVE", value: 1)
!19 = !DIEnumerator(name: "MP_UNARY_OP_INVERT", value: 2)
!20 = !DIEnumerator(name: "MP_UNARY_OP_NOT", value: 3)
!21 = !DIEnumerator(name: "MP_UNARY_OP_NUM_BYTECODE", value: 4)
!22 = !DIEnumerator(name: "MP_UNARY_OP_BOOL", value: 4)
!23 = !DIEnumerator(name: "MP_UNARY_OP_LEN", value: 5)
!24 = !DIEnumerator(name: "MP_UNARY_OP_HASH", value: 6)
!25 = !DIEnumerator(name: "MP_UNARY_OP_ABS", value: 7)
!26 = !DIEnumerator(name: "MP_UNARY_OP_SIZEOF", value: 8)
!27 = !DIEnumerator(name: "MP_UNARY_OP_NUM_RUNTIME", value: 9)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 69, size: 32, elements: !29)
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68}
!30 = !DIEnumerator(name: "MP_BINARY_OP_LESS", value: 0)
!31 = !DIEnumerator(name: "MP_BINARY_OP_MORE", value: 1)
!32 = !DIEnumerator(name: "MP_BINARY_OP_EQUAL", value: 2)
!33 = !DIEnumerator(name: "MP_BINARY_OP_LESS_EQUAL", value: 3)
!34 = !DIEnumerator(name: "MP_BINARY_OP_MORE_EQUAL", value: 4)
!35 = !DIEnumerator(name: "MP_BINARY_OP_NOT_EQUAL", value: 5)
!36 = !DIEnumerator(name: "MP_BINARY_OP_IN", value: 6)
!37 = !DIEnumerator(name: "MP_BINARY_OP_IS", value: 7)
!38 = !DIEnumerator(name: "MP_BINARY_OP_EXCEPTION_MATCH", value: 8)
!39 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_OR", value: 9)
!40 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_XOR", value: 10)
!41 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_AND", value: 11)
!42 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_LSHIFT", value: 12)
!43 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_RSHIFT", value: 13)
!44 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_ADD", value: 14)
!45 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_SUBTRACT", value: 15)
!46 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_MULTIPLY", value: 16)
!47 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_FLOOR_DIVIDE", value: 17)
!48 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_TRUE_DIVIDE", value: 18)
!49 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_MODULO", value: 19)
!50 = !DIEnumerator(name: "MP_BINARY_OP_INPLACE_POWER", value: 20)
!51 = !DIEnumerator(name: "MP_BINARY_OP_OR", value: 21)
!52 = !DIEnumerator(name: "MP_BINARY_OP_XOR", value: 22)
!53 = !DIEnumerator(name: "MP_BINARY_OP_AND", value: 23)
!54 = !DIEnumerator(name: "MP_BINARY_OP_LSHIFT", value: 24)
!55 = !DIEnumerator(name: "MP_BINARY_OP_RSHIFT", value: 25)
!56 = !DIEnumerator(name: "MP_BINARY_OP_ADD", value: 26)
!57 = !DIEnumerator(name: "MP_BINARY_OP_SUBTRACT", value: 27)
!58 = !DIEnumerator(name: "MP_BINARY_OP_MULTIPLY", value: 28)
!59 = !DIEnumerator(name: "MP_BINARY_OP_FLOOR_DIVIDE", value: 29)
!60 = !DIEnumerator(name: "MP_BINARY_OP_TRUE_DIVIDE", value: 30)
!61 = !DIEnumerator(name: "MP_BINARY_OP_MODULO", value: 31)
!62 = !DIEnumerator(name: "MP_BINARY_OP_POWER", value: 32)
!63 = !DIEnumerator(name: "MP_BINARY_OP_NUM_BYTECODE", value: 33)
!64 = !DIEnumerator(name: "MP_BINARY_OP_DIVMOD", value: 33)
!65 = !DIEnumerator(name: "MP_BINARY_OP_CONTAINS", value: 34)
!66 = !DIEnumerator(name: "MP_BINARY_OP_NUM_RUNTIME", value: 35)
!67 = !DIEnumerator(name: "MP_BINARY_OP_NOT_IN", value: 36)
!68 = !DIEnumerator(name: "MP_BINARY_OP_IS_NOT", value: 37)
!69 = !{!70, !72}
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_t", file: !6, line: 46, baseType: !71)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_uint_t", file: !73, line: 71, baseType: !74)
!73 = !DIFile(filename: "./mpconfigport.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !75, line: 30, baseType: !76)
!75 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_uintptr_t.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!76 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!77 = !{!0, !78, !226, !239, !263, !286}
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "mp_module_micropython_globals", scope: !2, file: !3, line: 198, type: !80, isLocal: true, isDefinition: true)
!80 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !81)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_dict_t", file: !6, line: 778, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_dict_t", file: !6, line: 775, size: 256, elements: !83)
!83 = !{!84, !225}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !82, file: !6, line: 776, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_base_t", file: !6, line: 59, baseType: !86)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_base_t", file: !6, line: 56, size: 64, elements: !87)
!87 = !{!88}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !86, file: !6, line: 57, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_type_t", file: !6, line: 52, baseType: !92)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_type_t", file: !6, line: 474, size: 960, elements: !93)
!93 = !{!94, !95, !99, !100, !125, !149, !154, !160, !166, !174, !179, !193, !198, !219, !222, !223}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !92, file: !6, line: 476, baseType: !85, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !92, file: !6, line: 479, baseType: !96, size: 16, offset: 64)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !97, line: 31, baseType: !98)
!97 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/_types/_uint16_t.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!98 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !92, file: !6, line: 482, baseType: !96, size: 16, offset: 80)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "print", scope: !92, file: !6, line: 485, baseType: !101, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_print_fun_t", file: !6, line: 441, baseType: !102)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DISubroutineType(types: !104)
!104 = !{null, !105, !70, !124}
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_print_t", file: !108, line: 53, baseType: !109)
!108 = !DIFile(filename: "../../py/mpprint.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_print_t", file: !108, line: 50, size: 128, elements: !110)
!110 = !{!111, !112}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !109, file: !108, line: 51, baseType: !71, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "print_strn", scope: !109, file: !108, line: 52, baseType: !113, size: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_print_strn_t", file: !108, line: 48, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DISubroutineType(types: !116)
!116 = !{null, !71, !117, !120}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 31, baseType: !122)
!121 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_size_t.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_size_t", file: !123, line: 92, baseType: !76)
!123 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/i386/_types.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_print_kind_t", file: !6, line: 430, baseType: !5)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "make_new", scope: !92, file: !6, line: 488, baseType: !126, size: 64, offset: 192)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_make_new_fun_t", file: !6, line: 442, baseType: !127)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DISubroutineType(types: !129)
!129 = !{!70, !89, !120, !130, !132}
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_map_t", file: !6, line: 374, baseType: !134)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_map_t", file: !6, line: 365, size: 192, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "all_keys_are_qstrs", scope: !134, file: !6, line: 366, baseType: !120, size: 1, flags: DIFlagBitField, extraData: i64 0)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "is_fixed", scope: !134, file: !6, line: 367, baseType: !120, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "is_ordered", scope: !134, file: !6, line: 368, baseType: !120, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "scanning", scope: !134, file: !6, line: 369, baseType: !120, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !134, file: !6, line: 371, baseType: !120, size: 60, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !134, file: !6, line: 372, baseType: !120, size: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !134, file: !6, line: 373, baseType: !143, size: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_map_elem_t", file: !6, line: 353, baseType: !145)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_map_elem_t", file: !6, line: 350, size: 128, elements: !146)
!146 = !{!147, !148}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !145, file: !6, line: 351, baseType: !70, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !145, file: !6, line: 352, baseType: !70, size: 64, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !92, file: !6, line: 491, baseType: !150, size: 64, offset: 256)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_call_fun_t", file: !6, line: 443, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DISubroutineType(types: !153)
!153 = !{!70, !70, !120, !120, !130}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "unary_op", scope: !92, file: !6, line: 495, baseType: !155, size: 64, offset: 320)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_unary_op_fun_t", file: !6, line: 444, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!70, !159, !70}
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_unary_op_t", file: !15, line: 65, baseType: !14)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "binary_op", scope: !92, file: !6, line: 496, baseType: !161, size: 64, offset: 384)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_binary_op_fun_t", file: !6, line: 445, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DISubroutineType(types: !164)
!164 = !{!70, !165, !70, !70}
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_binary_op_t", file: !15, line: 145, baseType: !28)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !92, file: !6, line: 509, baseType: !167, size: 64, offset: 448)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_attr_fun_t", file: !6, line: 446, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DISubroutineType(types: !170)
!170 = !{null, !70, !171, !173}
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "qstr", file: !172, line: 48, baseType: !120)
!172 = !DIFile(filename: "../../py/qstr.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "subscr", scope: !92, file: !6, line: 516, baseType: !175, size: 64, offset: 512)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_subscr_fun_t", file: !6, line: 447, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DISubroutineType(types: !178)
!178 = !{!70, !70, !70, !70}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "getiter", scope: !92, file: !6, line: 521, baseType: !180, size: 64, offset: 576)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_getiter_fun_t", file: !6, line: 448, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DISubroutineType(types: !183)
!183 = !{!70, !70, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_iter_buf_t", file: !6, line: 435, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_iter_buf_t", file: !6, line: 432, size: 256, elements: !187)
!187 = !{!188, !189}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !186, file: !6, line: 433, baseType: !85, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !186, file: !6, line: 434, baseType: !190, size: 192, offset: 64)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 192, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 3)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "iternext", scope: !92, file: !6, line: 525, baseType: !194, size: 64, offset: 640)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_1_t", file: !6, line: 415, baseType: !195)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DISubroutineType(types: !197)
!197 = !{!70, !70}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_p", scope: !92, file: !6, line: 528, baseType: !199, size: 64, offset: 704)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_buffer_p_t", file: !6, line: 470, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_buffer_p_t", file: !6, line: 468, size: 64, elements: !201)
!201 = !{!202}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer", scope: !200, file: !6, line: 469, baseType: !203, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!206, !70, !211, !72}
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_int_t", file: !73, line: 70, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !208, line: 32, baseType: !209)
!208 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk/usr/include/sys/_types/_intptr_t.h", directory: "/Users/fak/Dropbox/Projects/circuitpython/ports/dotnet")
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_intptr_t", file: !123, line: 49, baseType: !210)
!210 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_buffer_info_t", file: !6, line: 464, baseType: !213)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_buffer_info_t", file: !6, line: 451, size: 192, elements: !214)
!214 = !{!215, !216, !217}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !213, file: !6, line: 457, baseType: !71, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !213, file: !6, line: 458, baseType: !120, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "typecode", scope: !213, file: !6, line: 459, baseType: !218, size: 32, offset: 128)
!218 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !92, file: !6, line: 531, baseType: !220, size: 64, offset: 768)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !92, file: !6, line: 537, baseType: !220, size: 64, offset: 832)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "locals_dict", scope: !92, file: !6, line: 540, baseType: !224, size: 64, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !82, file: !6, line: 777, baseType: !133, size: 192, offset: 64)
!226 = !DIGlobalVariableExpression(var: !227, expr: !DIExpression())
!227 = distinct !DIGlobalVariable(name: "mp_module_micropython_globals_table", scope: !2, file: !3, line: 162, type: !228, isLocal: true, isDefinition: true)
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 640, elements: !237)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_rom_map_elem_t", file: !6, line: 358, baseType: !231)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_rom_map_elem_t", file: !6, line: 355, size: 128, elements: !232)
!232 = !{!233, !236}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !231, file: !6, line: 356, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_rom_obj_t", file: !6, line: 243, baseType: !235)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_const_obj_t", file: !6, line: 47, baseType: !220)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !231, file: !6, line: 357, baseType: !234, size: 64, offset: 64)
!237 = !{!238}
!238 = !DISubrange(count: 5)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "mp_micropython_opt_level_obj", scope: !2, file: !3, line: 49, type: !241, isLocal: true, isDefinition: true)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_fun_builtin_var_t", file: !6, line: 814, baseType: !243)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_fun_builtin_var_t", file: !6, line: 805, size: 192, elements: !244)
!244 = !{!245, !246, !248, !249, !250}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !243, file: !6, line: 806, baseType: !85, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "is_kw", scope: !243, file: !6, line: 807, baseType: !247, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!247 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "n_args_min", scope: !243, file: !6, line: 808, baseType: !72, size: 15, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "n_args_max", scope: !243, file: !6, line: 809, baseType: !72, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "fun", scope: !243, file: !6, line: 813, baseType: !251, size: 64, offset: 128)
!251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !243, file: !6, line: 810, size: 64, elements: !252)
!252 = !{!253, !258}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !251, file: !6, line: 811, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_var_t", file: !6, line: 418, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!70, !120, !130}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "kw", scope: !251, file: !6, line: 812, baseType: !259, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_kw_t", file: !6, line: 421, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!70, !120, !130, !132}
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "mp_micropython_heap_lock_obj", scope: !2, file: !3, line: 131, type: !265, isLocal: true, isDefinition: true)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_fun_builtin_fixed_t", file: !6, line: 802, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_fun_builtin_fixed_t", file: !6, line: 794, size: 128, elements: !268)
!268 = !{!269, !270}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !267, file: !6, line: 795, baseType: !85, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "fun", scope: !267, file: !6, line: 801, baseType: !271, size: 64, offset: 64)
!271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !267, file: !6, line: 796, size: 64, elements: !272)
!272 = !{!273, !278, !279, !284}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !271, file: !6, line: 797, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_0_t", file: !6, line: 414, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!70}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !271, file: !6, line: 798, baseType: !194, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !271, file: !6, line: 799, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_2_t", file: !6, line: 416, baseType: !281)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{!70, !70, !70}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !271, file: !6, line: 800, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_fun_3_t", file: !6, line: 417, baseType: !176)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "mp_micropython_heap_unlock_obj", scope: !2, file: !3, line: 137, type: !265, isLocal: true, isDefinition: true)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "mp_obj_module_t", file: !6, line: 831, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mp_obj_module_t", file: !6, line: 828, size: 128, elements: !291)
!291 = !{!292, !293}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !290, file: !6, line: 829, baseType: !85, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "globals", scope: !290, file: !6, line: 830, baseType: !294, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!295 = !{i32 2, !"SDK Version", [2 x i32] [i32 10, i32 14]}
!296 = !{i32 2, !"Dwarf Version", i32 4}
!297 = !{i32 2, !"Debug Info Version", i32 3}
!298 = !{i32 1, !"wchar_size", i32 4}
!299 = !{i32 7, !"PIC Level", i32 2}
!300 = !{!"Apple LLVM version 10.0.1 (clang-1001.0.46.4)"}
!301 = distinct !DISubprogram(name: "mp_micropython_opt_level", scope: !3, file: !3, line: 41, type: !256, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, isOptimized: true, unit: !2, retainedNodes: !302)
!302 = !{!303, !304}
!303 = !DILocalVariable(name: "n_args", arg: 1, scope: !301, file: !3, line: 41, type: !120)
!304 = !DILocalVariable(name: "args", arg: 2, scope: !301, file: !3, line: 41, type: !130)
!305 = !DILocation(line: 41, column: 49, scope: !301)
!306 = !DILocation(line: 41, column: 73, scope: !301)
!307 = !DILocation(line: 42, column: 16, scope: !308)
!308 = distinct !DILexicalBlock(scope: !301, file: !3, line: 42, column: 9)
!309 = !DILocation(line: 42, column: 9, scope: !301)
!310 = !DILocation(line: 43, column: 16, scope: !311)
!311 = distinct !DILexicalBlock(scope: !308, file: !3, line: 42, column: 22)
!312 = !{!313, !321, i64 328}
!313 = !{!"_mp_state_ctx_t", !314, i64 0, !318, i64 32, !325, i64 336}
!314 = !{!"_mp_state_thread_t", !315, i64 0, !315, i64 8, !315, i64 16, !315, i64 24}
!315 = !{!"any pointer", !316, i64 0}
!316 = !{!"omnipotent char", !317, i64 0}
!317 = !{!"Simple C/C++ TBAA"}
!318 = !{!"_mp_state_vm_t", !315, i64 0, !319, i64 8, !319, i64 40, !322, i64 72, !315, i64 104, !322, i64 112, !324, i64 144, !324, i64 176, !316, i64 208, !315, i64 272, !321, i64 280, !321, i64 288, !321, i64 296}
!319 = !{!"_mp_obj_exception_t", !320, i64 0, !321, i64 8, !321, i64 12, !315, i64 16, !315, i64 24}
!320 = !{!"_mp_obj_base_t", !315, i64 0}
!321 = !{!"long", !316, i64 0}
!322 = !{!"_mp_obj_dict_t", !320, i64 0, !323, i64 8}
!323 = !{!"_mp_map_t", !321, i64 0, !321, i64 0, !321, i64 0, !321, i64 0, !321, i64 0, !321, i64 8, !315, i64 16}
!324 = !{!"_mp_obj_list_t", !320, i64 0, !321, i64 8, !321, i64 16, !315, i64 24}
!325 = !{!"_mp_state_mem_t", !315, i64 0, !321, i64 8, !315, i64 16, !315, i64 24, !315, i64 32, !326, i64 40, !316, i64 48, !327, i64 560, !328, i64 562, !321, i64 568, !321, i64 576, !315, i64 584}
!326 = !{!"int", !316, i64 0}
!327 = !{!"short", !316, i64 0}
!328 = !{!"_Bool", !316, i64 0}
!329 = !DILocation(line: 43, column: 9, scope: !311)
!330 = !DILocation(line: 45, column: 57, scope: !331)
!331 = distinct !DILexicalBlock(scope: !308, file: !3, line: 44, column: 12)
!332 = !{!315, !315, i64 0}
!333 = !DILocation(line: 45, column: 42, scope: !331)
!334 = !DILocation(line: 45, column: 40, scope: !331)
!335 = !DILocation(line: 46, column: 9, scope: !331)
!336 = !DILocation(line: 0, scope: !331)
!337 = !DILocation(line: 48, column: 1, scope: !301)
!338 = distinct !DISubprogram(name: "mp_micropython_heap_lock", scope: !3, file: !3, line: 127, type: !276, isLocal: true, isDefinition: true, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, isOptimized: true, unit: !2, retainedNodes: !339)
!339 = !{}
!340 = !DILocation(line: 128, column: 5, scope: !338)
!341 = !DILocation(line: 129, column: 5, scope: !338)
!342 = distinct !DISubprogram(name: "mp_micropython_heap_unlock", scope: !3, file: !3, line: 133, type: !276, isLocal: true, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, isOptimized: true, unit: !2, retainedNodes: !339)
!343 = !DILocation(line: 134, column: 5, scope: !342)
!344 = !DILocation(line: 135, column: 5, scope: !342)
